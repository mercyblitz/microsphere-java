/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.microsphere.convert;

import org.junit.jupiter.api.Test;

import java.util.Date;
import java.util.Properties;

import static io.microsphere.constants.SeparatorConstants.LINE_SEPARATOR;
import static io.microsphere.convert.PropertiesToStringConverter.INSTANCE;
import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * {@link PropertiesToStringConverter} Test
 *
 * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
 * @since 1.0.0
 */
class PropertiesToStringConverterTest extends BaseConverterTest<Properties, String> {

    @Test
    void test() {
        PropertiesToStringConverter converter = INSTANCE;
        Properties properties = new Properties();
        properties.setProperty("A", "1");
        String content = converter.convert(properties);
        assertNotNull(content);
    }

    @Override
    protected AbstractConverter<Properties, String> createConverter() {
        return INSTANCE;
    }

    @Override
    protected Properties getSource() throws Throwable {
        Properties properties = new Properties();
        properties.setProperty("A", "1");
        return properties;
    }

    @Override
    protected String getTarget() throws Throwable {
        return "#Generated by Microsphere" +
                LINE_SEPARATOR +
                "#" + new Date() +
                LINE_SEPARATOR +
                "A=1" +
                LINE_SEPARATOR
                ;
    }
}
